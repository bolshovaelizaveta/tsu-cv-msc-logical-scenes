# Используем официальный Python образ с поддержкой CUDA
FROM nvidia/cuda:11.8-devel-ubuntu22.04

# Устанавливаем системные зависимости
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    ffmpeg \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libglib2.0-0 \
    libgtk-3-0 \
    libgl1-mesa-glx \
    libgstreamer1.0-0 \
    wget \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Создаем рабочую директорию
WORKDIR /app

# Копируем файл зависимостей
COPY requirements.txt .

# Устанавливаем Python зависимости (в правильном порядке для torch)
RUN pip3 install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
RUN pip3 install --no-cache-dir -r requirements.txt

# Предварительная загрузка моделей для ускорения первого запуска
RUN python3 -c "from transformers import CLIPProcessor, CLIPModel; CLIPModel.from_pretrained('openai/clip-vit-base-patch32'); CLIPProcessor.from_pretrained('openai/clip-vit-base-patch32')"
RUN python3 -c "from ultralytics import YOLO; YOLO('yolov8n-seg.pt')"

# Копируем исходный код
COPY . .

# Создаем директории для входных и выходных данных
RUN mkdir -p /data/input /data/output

# Устанавливаем переменные окружения
ENV PYTHONPATH=/app
ENV CUDA_VISIBLE_DEVICES=0

# Задаем точку входа
ENTRYPOINT ["python3", "shorts.py"]